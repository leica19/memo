
監視のデザインパターン

ユーザ視点での監視

アプリケーションから監視を始めるのではなく、ロードバランサから監視を始めること

インシデント管理

オンコールをローテンションにする

※オンコール：緊急対応

オンコールに対する補償

１：オンコールシフトの直後に、有給休暇を１日取らせる

２：オンコールシフトごとに手当を払う

オンコールは、睡眠の質や家族との時間など、生活の多くの部分に対してよくない影響があるので上記の補償

必ず振り返りを行うようにする
特定の個人を責めるようなことは絶対にしないこと

アラートにメールを使うのはやめよう

アラートの使い道３つ

１：すぐに応答かアクションが必要なアラート
＞SMS

２：注意が必要だがすぐにアクションは必要ないアラート
＞チャットルーム

３：履歴や診断のために保存しておくアラート
＞ログファイルに

# ビジネスを監視する

ビジネスKPIを技術指標に結びつける

※KPI：key performance indicator

## ビジネスサイドが知りたいメトリックス

・成長しているか、縮小しているか、停滞しているか。

・どのくらい利益が出ているか。収益性は改善しているか、悪化しているか、停滞しているか。

現在サイトに滞在しているユーザ
＞＞現在サイトに滞在しているユーザ

ユーザのログイン数
＞＞ユーザのログイン失敗、ログインのレイテンシ

投票
＞＞投票の失敗、投票のレイテンシ

顧客あたりのコスト

顧客にサービスを提供する為に、どのぐらいコストがかかるのかの指標

顧客獲得単価

顧客やユーザを獲得するのにどれくらいのコストがかかるのかの指標
マーケチームが知りたい情報

# ネットワーク監視

ネットワークの動き、パフォーマンスが、アプリケーションのパフォーマンスの基礎となる。
