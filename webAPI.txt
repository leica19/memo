
# Web APIとは？

API（Application Programming Interface）とは、
サービスのデータを外部のアプリケーションやプログラムから扱うための機能を提供するインターフェースです。
中でも、HTTP通信によってやりとりを行うAPIをWeb APIといいます。

Twitter APIを利用して独自のTwitterクライアントを作ったり、
Amazon APIを利用して自分のサイトに最新の商品情報を掲載したりできるのは、

TwitterやAmazonが、
自社のデータを扱うための処理を抽象化したプログラム（API）を外部に向けて公開しているためです。

このように、公開されているWeb APIを利用することで、
サービスから取得したデータを加工したり、
複数のAPIを組み合わせたりして、新たなサービスを開発することができるようになります。

まずは、Web APIの概要を理解しましょう。
その上で、今回はGitHub APIを例に、
実際にWeb APIを利用してみます。

# Web APIの探し方

Web APIにはさまざまな種類があり、
一般公開されているAPIの一覧を見ることができるまとめサイトなどもあります。
また、特定のWebサービスのAPIを探す場合は、
Google検索を利用するとよいでしょう。
たとえば、GitHubのAPIを探すには『GitHub API』と検索すると、
検索結果の一番目に公式ドキュメントが表示されます。

APIが提供されていない場合は、
スクレイピングなどで無理やりデータを取得するしかありませんが、
Webサービス側のHTMLの変更によって容易に破綻したり、
不正なアクセスとしてBANされてしまう可能性もあります。
そのため、利用はおすすめできません。

# Web APIの役割

Web APIを利用することで、
サービスが持つデータを外部からでも利用できるようになると述べましたが、
具体的にはWeb APIはどのような役割を果たしているのでしょうか。

たとえば、サービスのデータをWeb APIで提供するような場合において、
外部のプログラムとサービスのデータベースの中間に位置して、
やりとりの仲介を行うのがWeb APIです。
外部のプログラムからサービスのデータベースに直接アクセスすることはできませんが、
Web APIが橋渡しをすることで、
外部のプログラムがサーバー上にあるデータを取得したり、
サーバー上のデータを更新したりできるようになります。

両者を仲介するWeb APIは、外部のプログラムからの命令が、
Web APIで提供している機能と一致しない場合には受け付けてくれません。
また、公開範囲が限られているWeb APIの場合は、
対象範囲でなければ利用を許可しません。

つまり、Web APIを利用する側は、
Web APIが提供している機能を利用する以外のことはできないということです。
そのため、サービスのデータを勝手に書き換えたりはできませんし、
取得できるデータもサービスが持つすべてのデータが取得できるわけではなく、
Web APIで公開しているデータだけが対象となります。


Web APIが提供する機能しか利用できない代わりに、
内部の構成や実装を一切知らなくても、
必要事項をWeb APIに投げるだけで、
欲しいデータを得ることができるのです。

どのような機能が提供されているかはWeb APIによって異なるため、
APIのドキュメントを読む必要があります。
外部から利用されることを前提としているWeb APIであれば、
APIを利用するにあたっての必要な情報はすべてドキュメントに記載されています。

# Web APIを扱うための環境を用意

Web APIの概要については、
なんとなくイメージが湧いたのではないでしょうか。
それでは、習うより慣れろということで、
さっそくWeb APIを利用してみましょう。

Web APIは普通のWebサイトへのアクセスと同じように、
HTTPプロトコルを利用し、
リクエストとレスポンスによってやりとりを行います。
よって、HTTP通信が可能な環境であれば、
ブラウザに限らずどのような環境からもWeb APIにアクセスが可能です。
